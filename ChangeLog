2014.09.24, Version 1.0.5

* Project level: languages files should be common to server and client
* Fix unitests - add languages files to the tree
* Remove redundant output from i18n.json and project-tap.i18n compilers

2014.09.19, Version 1.0.4, 4d843a11cf757ef6d2ff6534a1c6b757b91eedda

* [bugfix] each language file should have its own output path
  (this bug prevented multiple files per language in the app level)

2014.09.16, Version 1.0.3, 888f3dd5066e320513a76f5bb1ce711a7a84478d

* [bugfix] TAPi18n.getLanguages() format is now compatible with docs

2014.09.10, Version 1.0.2, 66fcd441f3b6a107db0aa32c8f3ea9692c1c8c09

* [bugfix] compiler: fix error for invalid JSON

2014.09.10, Version 1.0.1, 7f92b8fbd8ced171873b8afd70a808f51167e7ac

* Allow project-tap.i18n's supported_languages to have a lang with no
translation files
* [bugfix] tap-i18n compiler: init compiler_configuration upon a rebuild

2014.09.09, Version 1.0.0, 5964838f9ab085136d45899d38bb126958c3deda

* Build plugin rewritten
* tap-i18n now fully support Meteor v0.9
* Ready to be used with Cordova
* **New Features:**
* Server side internationalization is now supported.
* The template translation helper name (_) and the package translation function
name (__) are now customizable.
* Transparent bundling, no need for special procedures for deploying project
that uses tap-i18n.
* Language files and project-tap.i18n can now be located anywhere in the project tree.
* A project/package can now have more than one language file for the same
language.
* getLanguages() now works in both server and client.
* **Backward compatibility:**
* package i18n files now have to be added to both the client and the server
architectures, not only the client.
* The base language of a dialects are no longer added automatically as a supported
language.
* project-tap.i18n: languages_files_dir and build_files_path properties are now
obsolete. browser_path property renamed to cdn_path.
* package-tap.i18n: languages_files_dir is now obsolete.

2014.08.30, Version 0.9.2, 742e44f659dfb7800d332bf4b2aa990e6f220d36

* Bugfix: Build plugin should consider projects with a *:i18n package as tap:i18n enabled
* Use tap:http-methods instead of raix:http-methods which isn't ready for v0.9.0

2014.08.30, Version 0.9.0, 118aa825e76165aac9df9f3153fbb8edc044a864

* tap-i18n is now tap:i18n
* Migrate to Meteor v0.9

2014.08.11, Version 0.8.0, a500ae5c5c6da2aa0ccd56bfe407bfa9c8a77b62

* [MINOR] package.js: only use single quotes to enclose strings
* Do not require having a file for the base language of a dialect
* Build plugin: make sure isString before removeFileTrailingSeparator

2014.07.30, Version 0.7.0, 7c414420e65cb67a9e49896826542db1815a257c

* Refactor build plugin. Fix a rare bug causing the proj base lang not to load
* build plugin: catch all build errors and use compileStep.error to report them
* Do not build/load supported languages with no translation files

2014.06.26, Version 0.6.0, 7e9685ce75165a6a5998f6f4643490fc1e14c166

* Introduce {{languageTag}}
* README: add instuctions for deploying tap-i18n projects to *.meteor.com
* tap-i18n now works in Meteor bundles

2014.06.14, Version 0.5.1, 71a9ad595e972998e16d7cbd60fed699127464c3

* Bugfix: Trigger buildFilesOnce for .i18n.json files for the os arch so
  TAPi18n.conf will get set if there is no project-tap.i18n

2014.06.13, Version 0.5.0, 0d7ea8c3ac8307b3d48efc6c8b80b1ce2dd1e8b1

* Unittests now work on mac
* Introduce TAPi18n.getLanguages()

2014.06.12, Version 0.4.0, f583aa179b559d447519c61dcdb019f05a0b10a3

* README restructured
* Set lisence to: MIT

2014.06.11, Version 0.3.0, ba328abf4e057b60c82cfb455d183fe1ff4605cd

* Refresh the clients when .i18n.json files change
* bugfix: build files if i18n.json files change for case we don't have
  project-tap.i18n to trigger build
* Show debug meesages only if globals.debug is true or env variable
  TAP_I18N_DEBUG is "true"
* project-tap.i18n ignore default_browser_path if build_files_path is null
* Fixes to README

2014.06.10, Version 0.2.0, 50bb1e9643e8233438ff7614bb79ca3dd575a3a8

* Implement project-level translations
* For enabled tap-i18n projects use the http-methods package as the default
  mean for serving unified languages files instead of /public
* API change: Consider projects with no project-tap.i18n as tap-i18n enabled
* API change: By default, regard all the languages we find translations for as
  supported_languages
* API change: No package-level default language - en is our fallback_language
  everywhere
* Improve the unittesting framework
* Naming: Use TAPi18n and TAPi18next instead of TapI18n and TapI18next
* Bugfix: don't add an error object when throwing exception if error 

2014.05.22, Version 0.1.0, 676f50f0bea154596cacf44c34c352b09aa1d215

* tap-i18n first release
