#!/bin/bash

set -m

# START get true PWD
# (http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in/179231)
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
pushd . > /dev/null
# END get true PWD

# cd to the package dir
cd "$DIR/.."

script_name=$(basename $0)
test_name=${script_name##unittest-}

remove_package_js_test_section () {
    sed -i '/Package.on_test/,/});/d' package.js
}

add_package_js_test_section () {
    test_name="$1"
    test_specific="$2"

    remove_package_js_test_section

    cat <<EOF >> package.js
Package.on_test(function (api) {
  api.use('coffeescript', ['client', 'server']);
  api.use(['tinytest', 'test-helpers'], ['client', 'server']);

  api.use(['test-pack-a', 'test-pack-b'], ['client']);

  $test_specific

  api.add_files('unittest/tests/common.coffee', ['client']);
  api.add_files('unittest/tests/$test_name.coffee', ['client']);
});
EOF
}

run_meteor_test () {
    local port=$1

    meteor --port=$1 test-packages ./
}

test_disabled () {
    local test_name="disabled" port=3000

    echo "Unit Test: tap-i18n is disabled in the project level"

    add_package_js_test_section "$test_name"

    run_meteor_test $port
}

test_enabled () {
    local test_name="enabled" port=3000

    echo "Unit Test: tap-i18n is enabled in the project level default configuration"

    echo "{}" > project-tap.i18n

    package_js_on_test="$(cat <<EOF
    api.use('tap-i18n', ['client']);

    api.add_files('project-tap.i18n', ['client']);
EOF
    )"

    add_package_js_test_section "$test_name" "$package_js_on_test"

    run_meteor_test $port
}

test_enabled_custom () {
    local test_name="enabled_custom" port=3000

    echo "Unit Test: tap-i18n is enabled in the project level custom configuration"

    echo '{"supported_languages": ["pt", "pt-BR", "fr"], "build_files_path": "public/x", "browser_path": "http://localhost:3000/translations/"}' > project-tap.i18n

    package_js_on_test="$(cat <<EOF
    api.use('tap-i18n', ['client']);

    api.add_files('project-tap.i18n', ['client']);
EOF
    )"

    # note that we use the enabled unittest since the customisations only
    # affect the build process.
    add_package_js_test_section "enabled" "$package_js_on_test"

    run_meteor_test $port
}

if [[ $test_name == "all" ]]; then
    test_disabled
    test_enabled
    test_enabled_custom
else
    test_"$test_name"
fi

rm project-tap.i18n
remove_package_js_test_section
